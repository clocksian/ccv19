<?xml version="1.0"?>
<ruleset name="MemWords ruleset"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
  <description>
  The PMD ruleset used by ninja-core
  </description>
  
  <rule ref="rulesets/java/empty.xml">
      <exclude name="EmptyCatchBlock"/>
  </rule>
  <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
      <properties>
          <property name="allowCommentedBlocks" value="true"/>
      </properties>
  </rule>

  <rule ref="rulesets/java/braces.xml"/>
  
  <rule ref="rulesets/java/clone.xml"/>

  <rule ref="rulesets/java/controversial.xml/AssignmentInOperand"/>
  <rule ref="rulesets/java/controversial.xml/DontImportSun"/>
  
  <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns"/>
  <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions"/>
  <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault"/>
  <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod"/>
  <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic"/>
  <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt"/>
  <rule ref="rulesets/java/design.xml/OptimizableToArrayCall"/>
  <rule ref="rulesets/java/design.xml/EqualsNull"/>
  <rule ref="rulesets/java/design.xml/InstantiationToGetClass"/>
  <rule ref="rulesets/java/design.xml/IdempotentOperations"/>
  <rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale"/>
  <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions"/>
  <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass"/>
  <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic"/>
  <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
  <rule ref="rulesets/java/design.xml/MissingBreakInSwitch"/>
  <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify"/>
  <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause"/>
  <rule ref="rulesets/java/design.xml/SimplifyConditional"/>
  <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals"/>
  <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons"/>
  <rule ref="rulesets/java/design.xml/UncommentedEmptyMethod"/>
  <rule ref="rulesets/java/design.xml/AvoidConstantsInterface"/>
  <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter"/>
  <rule ref="rulesets/java/design.xml/PreserveStackTrace"/>
  <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
  <rule ref="rulesets/java/design.xml/SingularField"/>
  <rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull"/>
  <rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod"/>
  
  <rule ref="rulesets/java/finalizers.xml"/>
  
  <rule ref="rulesets/java/imports.xml"/>
  
  <rule ref="rulesets/java/naming.xml/VariableNamingConventions"/>
  <rule ref="rulesets/java/naming.xml/MethodNamingConventions"/>
  <rule ref="rulesets/java/naming.xml/ClassNamingConventions"/>
  <rule ref="rulesets/java/naming.xml/AbstractNaming"/>
  <rule ref="rulesets/java/naming.xml/AvoidDollarSigns"/>
  <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass"/>
  <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName"/>
  <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName"/>
  <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName"/>
  <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName"/>
  <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName"/>
  <rule ref="rulesets/java/naming.xml/NoPackage"/>
  <rule ref="rulesets/java/naming.xml/PackageCase"/>
  <rule ref="rulesets/java/naming.xml/BooleanGetMethodName"/>
  
  <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector"/>
  <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith"/>
  <rule ref="rulesets/java/optimizations.xml/UseArraysAsList"/>
  <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops"/>
  <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
  <rule ref="rulesets/java/optimizations.xml/AddEmptyString"/>
  
  <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable"/>
  <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException"/>
  <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE"/>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
  <rule ref="rulesets/java/strictexception.xml/DoNotExtendJavaLangError"/>
  <rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally"/>
  <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException"/>
  
  <rule ref="rulesets/java/strings.xml">
      <exclude name="AvoidDuplicateLiterals"/>
  </rule>
  
  <rule ref="rulesets/java/unusedcode.xml"/>-->
</ruleset>